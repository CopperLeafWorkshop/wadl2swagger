---
swagger: '2.0'
info:
  title: dbaas
  version: Unknown
consumes:
- application/json
produces:
- application/json
paths:
  "/":
    get:
      operationId: getVersions
      summary: List versions
      description: |
        Lists information about all versions of the API.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "versions": [
                      {
                          "status": "CURRENT",
                          "updated": "2012-01-01T00:00:00Z",
                          "id": "v1.0",
                          "links": [
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/v1.0/",
                                  "rel": "self"
                              }
                          ]
                      }
                  ]
              }
  "/{version}":
    get:
      operationId: getVersionInfo
      summary: List version details
      description: |
        Returns detailed information about the specified version of the API.
      produces:
      - application/json
      responses:
        '202':
          description: 202 response
          examples:
            application/json: |-
              {
                  "version": {
                      "status": "CURRENT",
                      "updated": "2012-01-01T00:00:00Z",
                      "id": "v1.0",
                      "links": [
                          {
                              "href": "https://ord.databases.api.rackspacecloud.com/v1.0/",
                              "rel": "self"
                          }
                      ]
                  }
              }
  "/{version}/{accountId}/instances":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    post:
      operationId: createReplica
      summary: Create replica
      description: |
        Creates a replica of the source instance, as specified by the value of the `replica_of` attribute.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "instance": {
                      "status": "BUILD",
                      "updated": "2014-10-14T18:42:15",
                      "name": "t2s1_ALT_GUEST",
                      "links": [
                          {
                              "href": "https://ord.databases.api.rackspacecloud.com/v1.0/5919009/instances/8367c312-7c40-4a66-aab1-5767478914fc",
                              "rel": "self"
                          },
                          {
                              "href": "https://ord.databases.api.rackspacecloud.com/instances/8367c312-7c40-4a66-aab1-5767478914fc",
                              "rel": "bookmark"
                          }
                      ],
                      "created": "2014-10-14T18:42:15",
                      "volume": {
                          "size": 1
                      },
                      "replica_of": {
                          "id": "6bdca2fc-418e-40bd-a595-62abda61862d",
                          "links": [
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/v1.0/5919009/instances/6bdca2fc-418e-40bd-a595-62abda61862d",
                                  "rel": "self"
                              },
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/instances/6bdca2fc-418e-40bd-a595-62abda61862d",
                                  "rel": "bookmark"
                              }
                          ]
                      },
                      "flavor": {
                          "id": "9",
                          "links": [
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/v1.0/5919009/flavors/9",
                                  "rel": "self"
                              },
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/flavors/9",
                                  "rel": "bookmark"
                              }
                          ]
                      },
                      "id": "8367c312-7c40-4a66-aab1-5767478914fc",
                      "datastore": {
                          "version": "5.6",
                          "type": "mysql"
                      }
                  }
              }
    get:
      operationId: getReplicasOrReplicaSources
      summary: List all replicas and replica source database instances
      description: |
        Lists the status and information for all replicas and replica sources.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples: {}
  "/{version}/{accountId}/instances/{instanceId}":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: instanceId
      required: true
      in: path
      type: string
      description: |
        The instance ID for the specified database instance.
    put:
      operationId: updateInstance
      summary: Update database instance
      description: |
        Associates a specified database instance with a configuration group.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples: {}
    get:
      operationId: getReplica
      summary: List replica details
      description: |
        Lists status and details for a specified replica.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "instance": {
                      "status": "ACTIVE",
                      "updated": "2014-10-21T19:54:55",
                      "name": "t1s1_ALT_GUEST",
                      "links": [
                          {
                              "href": " https://ord.databases.api.rackspacecloud.com/v1.0/1234/instances /1131f914-571c-4cd1-a5e5-0c2235eaa66f",
                              "rel": "self"
                          },
                          {
                              "href": " https://ord.databases.api.rackspacecloud.com/instances /1131f914-571c-4cd1-a5e5-0c2235eaa66f",
                              "rel": "bookmark"
                          }
                      ],
                      "created": "2014-10-21T19:54:00",
                      "ip": [
                          "10.0.0.3"
                      ],
                      "volume": {
                          "used": 0.06,
                          "size": 1
                      },
                      "replica_of": {
                          "id": "8215d522-d66a-479b-83c0-fbacc5dd05fc",
                          "links": [
                              {
                                  "href": "https https://ord.databases.api.rackspacecloud.com/v1.0/1234/instances /8215d522-d66a-479b-83c0-fbacc5dd05fc",
                                  "rel": "self"
                              },
                              {
                                  "href": " https://ord.databases.api.rackspacecloud.com/instances /8215d522-d66a-479b-83c0-fbacc5dd05fc",
                                  "rel": "bookmark"
                              }
                          ]
                      },
                      "flavor": {
                          "id": "9",
                          "links": [
                              {
                                  "href": " https://ord.databases.api.rackspacecloud.com/v1.0/1234/flavors /9",
                                  "rel": "self"
                              },
                              {
                                  "href": " https://ord.databases.api.rackspacecloud.com/flavors /9",
                                  "rel": "bookmark"
                              }
                          ]
                      },
                      "id": "1131f914-571c-4cd1-a5e5-0c2235eaa66f",
                      "datastore": {
                          "version": "5.6",
                          "type": "mysql"
                      }
                  }
              }
    delete:
      operationId: deleteInstance
      summary: Delete database instance
      description: |
        Deletes the specified database instance.
      produces: []
      responses:
        '202':
          description: 202 response
    patch:
      operationId: detachReplica
      summary: Detach replica
      description: |
        Detaches the specified replica instance from its replication source instance.
      produces:
      - application/json
      responses:
        '202':
          description: 202 response
          examples: {}
  "/{version}/{accountId}/instances/{instanceId}/action":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: instanceId
      required: true
      in: path
      type: string
      description: |
        The instance ID for the specified database instance.
    post:
      operationId: restartInstance
      summary: Restart instance
      description: |
        Restarts the database service on the instance.
      produces:
      - application/json
      responses:
        '202':
          description: 202 response
          examples: {}
  "/{version}/{accountId}/instances/{instanceId}/databases":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: instanceId
      required: true
      in: path
      type: string
      description: |
        The instance ID for the specified database instance.
    post:
      operationId: createDatabase
      summary: Create database
      description: |
        Creates a new database within the specified instance.
      produces:
      - application/json
      responses:
        '202':
          description: 202 response
          examples: {}
    get:
      operationId: getDatabases
      summary: List databases for instance
      description: |
        Lists databases for the specified instance.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "links": [
                      {
                          "href": "https://ord.databases.api.rackspacecloud.com/v1.0/1234/instances/d4603f69-ec7e-4e9b-803f-600b9205576f/databases?marker=anotherdb&limit=1",
                          "rel": "next"
                      }
                  ],
                  "databases": [
                      {
                          "name": "anotherdb"
                      }
                  ]
              }
  "/{version}/{accountId}/instances/{instanceId}/databases/{databaseName}":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: instanceId
      required: true
      in: path
      type: string
      description: |
        The instance ID for the specified database instance.
    - name: databaseName
      required: true
      in: path
      type: string
      description: |
        The name for the specified database.
    delete:
      operationId: deleteDatabase
      summary: Delete database
      description: |
        Deletes the specified database.
      produces:
      - application/json
      responses:
        '202':
          description: 202 response
          examples: {}
  "/{version}/{accountId}/instances/{instanceId}/users":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: instanceId
      required: true
      in: path
      type: string
      description: |
        The instance ID for the specified database instance.
    post:
      operationId: createUser
      summary: Create user
      description: |
        Creates a user for the specified database instance.
      produces:
      - application/json
      responses:
        '202':
          description: 202 response
          examples: {}
    get:
      operationId: getUsers
      summary: List users in database instance
      description: |
        Lists the users in the specified database instance.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "users": [
                      {
                          "host": "%",
                          "name": "dbuser1",
                          "databases": [
                              {
                                  "name": "databaseA"
                              }
                          ]
                      },
                      {
                          "host": "%",
                          "name": "dbuser2",
                          "databases": [
                              {
                                  "name": "databaseB"
                              },
                              {
                                  "name": "databaseC"
                              }
                          ]
                      }
                  ],
                  "links": [
                      {
                          "href": "https://ord.databases.api.rackspacecloud.com/v1.0/1234/instances/d4603f69-ec7e-4e9b-803f-600b9205576f/users?marker=dbuser2%2540%2525&limit=2",
                          "rel": "next"
                      }
                  ]
              }
    put:
      operationId: changePass
      summary: Change user(s) password
      description: |
        Changes the database password of one or more users.
      produces:
      - application/json
      responses:
        '202':
          description: 202 response
          examples: {}
  "/{version}/{accountId}/instances/{instanceId}/users/{name}":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: instanceId
      required: true
      in: path
      type: string
      description: |
        The instance ID for the specified database instance.
    - name: name
      required: true
      in: path
      type: string
      description: |
        The name for the specified user. Refer to
        http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/user\_access\_restrict\_by\_host-dle387.html
        for details about restricting the name to a particular host. Examples: testuser, testuser@192.168.1.12 (to restrict the user to connecting from a particular host IP)
    delete:
      operationId: deleteUser
      summary: Delete user
      description: |
        Deletes the user identified by {name} for the specified database instance.
      produces:
      - application/json
      responses:
        '202':
          description: 202 response
          examples: {}
    get:
      operationId: listUser
      summary: List user
      description: |
        Lists the specified user's name and a list of databases that the user can access.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "user": {
                      "host": "%",
                      "name": "dbuser1",
                      "databases": []
                  }
              }
    put:
      operationId: modifyUser
      summary: Modify user attributes
      description: |
        Modifies one or more of the following for the specified user: name, password, and host from which the user is allowed to connect to the database.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples: {}
  "/{version}/{accountId}/instances/{instanceId}/users/{name}/databases":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: instanceId
      required: true
      in: path
      type: string
      description: |
        The instance ID for the specified database instance.
    - name: name
      required: true
      in: path
      type: string
      description: |
        The name for the specified user. Refer to
        http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/user\_access\_restrict\_by\_host-dle387.html
        for details about restricting the name to a particular host. Examples: testuser, testuser@192.168.1.12 (to restrict the user to connecting from a particular host IP)
    get:
      operationId: getUserAccess
      summary: List user access
      description: |
        Shows a list of all databases a user has access to.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "databases": [
                      {
                          "name": "databaseB"
                      },
                      {
                          "name": "databaseC"
                      }
                  ]
              }
    put:
      operationId: grantUserAccess
      summary: Grant user access
      description: |
        Grants access for the specified user to one or more databases for the specified instance.
      produces:
      - application/json
      responses:
        '202':
          description: 202 response
          examples: {}
  "/{version}/{accountId}/instances/{instanceId}/users/{name}/databases/{databaseName}":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: instanceId
      required: true
      in: path
      type: string
      description: |
        The instance ID for the specified database instance.
    - name: name
      required: true
      in: path
      type: string
      description: |
        The name for the specified user. Refer to
        http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/user\_access\_restrict\_by\_host-dle387.html
        for details about restricting the name to a particular host. Examples: testuser, testuser@192.168.1.12 (to restrict the user to connecting from a particular host IP)
    - name: databaseName
      required: true
      in: path
      type: string
      description: |
        The name for the specified database.
    delete:
      operationId: revokeUserAccess
      summary: Revoke user access
      description: |
        Removes access to the specified database for the specified user.
      produces:
      - application/json
      responses:
        '202':
          description: 202 response
          examples: {}
  "/{version}/{accountId}/instances/{instanceId}/configuration":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: instanceId
      required: true
      in: path
      type: string
      description: |
        The instance ID for the specified database instance.
    get:
      operationId: getDefaultConfig
      summary: Get default configuration
      description: |
        Lists the default configuration settings from the template that were applied to the specified instance.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "instance": {
                      "configuration": {
                          "tmp_table_size": "16M",
                          "innodb_log_files_in_group": "2",
                          "skip-external-locking": "1",
                          "innodb_checksum_algorithm": "crc32",
                          "read_rnd_buffer_size": "1M",
                          "skip_name_resolve": "1",
                          "max_heap_table_size": "16M",
                          "port": "3306",
                          "tmpdir": "/var/tmp",
                          "max_connect_errors": "10000",
                          "myisam-recover": "BACKUP",
                          "server_id": "1",
                          "innodb_buffer_pool_size": "175M",
                          "user": "mysql",
                          "basedir": "/usr",
                          "max_allowed_packet": "16M",
                          "datadir": "/var/lib/mysql",
                          "innodb_log_buffer_size": "8M",
                          "max_connections": "40",
                          "default_storage_engine": "innodb",
                          "connect_timeout": "15",
                          "query_cache_type": "1",
                          "local-infile": "0",
                          "innodb_log_file_size": "256M",
                          "innodb_thread_concurrency": "0",
                          "pid_file": "/var/run/mysqld/mysqld.pid",
                          "query_cache_limit": "1M",
                          "read_buffer_size": "256K",
                          "innodb_io_capacity_max": "400               # 2 x innodb_io_capacity",
                          "query_cache_size": "8M",
                          "innodb_data_file_path": "ibdata1:10M:autoextend",
                          "performance_schema": "off",
                          "thread_stack": "192K",
                          "table_open_cache": "4096",
                          "log-error": "/var/log/mysql/mysqld.log",
                          "sort_buffer_size": "256K",
                          "innodb_buffer_pool_instances": "1",
                          "wait_timeout": "3600",
                          "open_files_limit": "8192",
                          "innodb_io_capacity": "200",
                          "innodb_file_per_table": "1",
                          "innodb_open_files": "8192",
                          "key_buffer_size": "50M",
                          "join_buffer_size": "1M"
                      }
                  }
              }
  "/{version}/{accountId}/instances/{instanceId}/root":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: instanceId
      required: true
      in: path
      type: string
      description: |
        The instance ID for the specified database instance.
    post:
      operationId: createRoot
      summary: Enable root user
      description: |
        Enables the root user for the specified database instance and returns the root password.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "user": {
                      "password": "12345",
                      "name": "root"
                  }
              }
    get:
      operationId: isRootEnabled
      summary: List root-enabled status
      description: |
        Returns true if root user is enabled for the specified database instance or false otherwise.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "rootEnabled": true
              }
  "/{version}/{accountId}/instances/{instanceId}/backups":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: instanceId
      required: true
      in: path
      type: string
      description: |
        The instance ID for the specified database instance.
    get:
      operationId: getBackupsByInstance
      summary: List backups for instance
      description: |
        Lists all backups for a specified instance.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "backup": {
                      "status": "COMPLETED",
                      "updated": "2014-06-19T15:56:58",
                      "description": "Backup from Restored Instance",
                      "created": "2014-06-19T15:55:54",
                      "name": "restored_backup",
                      "instance_id": "34d6c8bf-539e-47d1-8a06-2b7590521309",
                      "parent_id": null,
                      "locationRef": "http://localhost/path/to/backup",
                      "datastore": {
                          "version": "5.1",
                          "type": "MySQL",
                          "version_id": "20000000-0000-0000-0000-000000000002"
                      },
                      "id": "e2d3dfca-430f-4cd2-bec0-884cd7426f13",
                      "size": 0.141026
                  }
              }
  "/{version}/{accountId}/flavors":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    get:
      operationId: getFlavors
      summary: List flavors
      description: |
        Lists information for all available flavors.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "flavors": [
                      {
                          "ram": 512,
                          "id": 1,
                          "links": [
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/v1.0/1234/flavors/1",
                                  "rel": "self"
                              },
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/flavors/1",
                                  "rel": "bookmark"
                              }
                          ],
                          "name": "512MB Instance"
                      },
                      {
                          "ram": 1024,
                          "id": 2,
                          "links": [
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/v1.0/1234/flavors/2",
                                  "rel": "self"
                              },
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/flavors/2",
                                  "rel": "bookmark"
                              }
                          ],
                          "name": "1GB Instance"
                      },
                      {
                          "ram": 2048,
                          "id": 3,
                          "links": [
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/v1.0/1234/flavors/3",
                                  "rel": "self"
                              },
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/flavors/3",
                                  "rel": "bookmark"
                              }
                          ],
                          "name": "2GB Instance"
                      },
                      {
                          "ram": 4096,
                          "id": 4,
                          "links": [
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/v1.0/1234/flavors/4",
                                  "rel": "self"
                              },
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/flavors/4",
                                  "rel": "bookmark"
                              }
                          ],
                          "name": "4GB Instance"
                      },
                      {
                          "ram": 8192,
                          "id": 5,
                          "links": [
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/v1.0/1234/flavors/5",
                                  "rel": "self"
                              },
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/flavors/5",
                                  "rel": "bookmark"
                              }
                          ],
                          "name": "8GB Instance"
                      },
                      {
                          "ram": 16384,
                          "id": 6,
                          "links": [
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/v1.0/1234/flavors/6",
                                  "rel": "self"
                              },
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/flavors/6",
                                  "rel": "bookmark"
                              }
                          ],
                          "name": "16GB Instance"
                      },
                      {
                          "ram": 32768,
                          "id": 7,
                          "links": [
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/v1.0/647683/flavors/7",
                                  "rel": "self"
                              },
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/flavors/7",
                                  "rel": "bookmark"
                              }
                          ],
                          "name": "32GB Instance"
                      },
                      {
                          "ram": 65536,
                          "id": 8,
                          "links": [
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/v1.0/647683/flavors/8",
                                  "rel": "self"
                              },
                              {
                                  "href": "https://ord.databases.api.rackspacecloud.com/flavors/8",
                                  "rel": "bookmark"
                              }
                          ],
                          "name": "64GB Instance"
                      }
                  ]
              }
  "/{version}/{accountId}/flavors/{flavorId}":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: flavorId
      required: true
      in: path
      type: string
      description: |
        The flavor ID for the specified flavor.
    get:
      operationId: getFlavorById
      summary: List flavor by ID
      description: |
        Lists all flavor information about the specified flavor ID.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "flavor": {
                      "ram": 512,
                      "id": 1,
                      "links": [
                          {
                              "href": "https://ord.databases.api.rackspacecloud.com/v1.0/1234/flavors/1",
                              "rel": "self"
                          },
                          {
                              "href": "https://ord.databases.api.rackspacecloud.com/flavors/1",
                              "rel": "bookmark"
                          }
                      ],
                      "name": "512MB Instance"
                  }
              }
  "/{version}/{accountId}/backups":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    post:
      operationId: createBackup
      summary: Create backup
      description: |
        Creates a new backup for a database instance.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "backup": {
                      "status": "NEW",
                      "updated": "2014-02-13T21:47:16",
                      "description": "My Backup",
                      "created": "2014-02-13T21:47:16",
                      "instance_id": "d4603f69-ec7e-4e9b-803f-600b9205576f",
                      "parent_id": null,
                      "locationRef": null,
                      "size": null,
                      "id": "61f12fef-edb1-4561-8122-e7c00ef26a82",
                      "name": "snapshot"
                  }
              }
    get:
      operationId: getBackups
      summary: List backups
      description: |
        Lists all backups for all database instances.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "backups": [
                      {
                          "status": "COMPLETED",
                          "updated": "2014-06-19T15:56:58",
                          "description": "Backup from Restored Instance",
                          "created": "2014-06-19T15:55:54",
                          "name": "restored_backup",
                          "instance_id": "34d6c8bf-539e-47d1-8a06-2b7590521309",
                          "parent_id": null,
                          "locationRef": "http://localhost/path/to/backup",
                          "datastore": {
                              "version": "5.1",
                              "type": "MySQL",
                              "version_id": "20000000-0000-0000-0000-000000000002"
                          },
                          "id": "e2d3dfca-430f-4cd2-bec0-884cd7426f13",
                          "size": 0.141026
                      },
                      {
                          "status": "COMPLETED",
                          "updated": "2014-06-19T15:26:10",
                          "description": "Backup from Restored Instance",
                          "created": "2014-06-19T15:25:06",
                          "name": "restored_backup",
                          "instance_id": "c7855b60-2a50-4ed9-8de3-f35f2067fb2a",
                          "parent_id": null,
                          "locationRef": "http://localhost/path/to/backup",
                          "datastore": {
                              "version": "5.1",
                              "type": "MySQL",
                              "version_id": "20000000-0000-0000-0000-000000000002"
                          },
                          "id": "5890e1cc-c5ad-460c-baec-cfdaf2ccf796",
                          "size": 0.141026
                      },
                      {
                          "status": "COMPLETED",
                          "updated": "2014-06-19T15:20:04",
                          "description": "Backup from Restored Instance",
                          "created": "2014-06-19T15:19:00",
                          "name": "restored_backup",
                          "instance_id": "e84b5d1c-97c9-4aa1-9f0a-dbf867f1087c",
                          "parent_id": null,
                          "locationRef": "http://localhost/path/to/backup",
                          "datastore": {
                              "version": "5.1",
                              "type": "MySQL",
                              "version_id": "20000000-0000-0000-0000-000000000002"
                          },
                          "id": "6fdbf0cc-8950-481b-995f-1f041abda2b6",
                          "size": 0.141026
                      },
                      {
                          "status": "COMPLETED",
                          "updated": "2014-06-19T15:05:23",
                          "description": "Backup from Restored Instance",
                          "created": "2014-06-19T15:04:19",
                          "name": "restored_backup",
                          "instance_id": "3120d7eb-42fe-4d63-b8f6-98396f4c8590",
                          "parent_id": null,
                          "locationRef": "http://localhost/path/to/backup",
                          "datastore": {
                              "version": "5.1",
                              "type": "MySQL",
                              "version_id": "20000000-0000-0000-0000-000000000002"
                          },
                          "id": "b3b8ef8b-36a6-4043-9997-701b34a2b805",
                          "size": 0.141026
                      },
                      {
                          "status": "COMPLETED",
                          "updated": "2014-06-18T21:24:39",
                          "description": "Backup from Restored Instance",
                          "created": "2014-06-18T21:23:35",
                          "name": "restored_backup",
                          "instance_id": "29af2cd9-0674-48ab-b87a-b160f00208e6",
                          "parent_id": null,
                          "locationRef": "http://localhost/path/to/backup",
                          "datastore": {
                              "version": "5.1",
                              "type": "MySQL",
                              "version_id": "20000000-0000-0000-0000-000000000002"
                          },
                          "id": "87972694-4be2-40f5-83f8-501656e0032a",
                          "size": 0.141026
                      }
                  ]
              }
  "/{version}/{accountId}/backups/{backupId}":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: backupId
      required: true
      in: path
      type: string
      description: |
        The backup ID for the specified backup.
    get:
      operationId: getBackupById
      summary: List backup by ID
      description: |
        Lists details about a specified backup.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "backup": {
                      "status": "COMPLETED",
                      "updated": "2014-06-19T15:56:58",
                      "description": "Backup from Restored Instance",
                      "created": "2014-06-19T15:55:54",
                      "name": "restored_backup",
                      "instance_id": "34d6c8bf-539e-47d1-8a06-2b7590521309",
                      "parent_id": null,
                      "locationRef": "http://localhost/path/to/backup",
                      "datastore": {
                          "version": "5.1",
                          "type": "MySQL",
                          "version_id": "20000000-0000-0000-0000-000000000002"
                      },
                      "id": "e2d3dfca-430f-4cd2-bec0-884cd7426f13",
                      "size": 0.141026
                  }
              }
    delete:
      operationId: deleteBackup
      summary: Delete backup
      description: |
        Deletes the specified backup.
      produces: []
      responses:
        '202':
          description: 202 response
  "/{version}/{accountId}/configurations":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    get:
      operationId: getConfigurations
      summary: List configurations
      description: |
        Lists all defined configuration groups for the tenant.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "configurations": [
                      {
                          "updated": "2014-07-31T18:56:09",
                          "description": "example description",
                          "created": "2014-07-31T18:56:09",
                          "datastore_name": "mysql",
                          "datastore_version_id": "b00000b0-00b0-0b00-00b0-000b000000bb",
                          "id": "005a8bb7-a8df-40ee-b0b7-fc144641abc2",
                          "datastore_version_name": "5.6",
                          "name": "example-configuration-name"
                      }
                  ]
              }
    post:
      operationId: createConfiguration
      summary: Create configuration
      description: |
        Creates a new configuration group based on the parameters supplied in the request body.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples: {}
  "/{version}/{accountId}/configurations/{configId}":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: configId
      required: true
      in: path
      type: string
      description: |
        The configuration ID for the specified configuration group.
    get:
      operationId: getConfigurationById
      summary: List configuration details
      description: |
        Lists details for the specified configuration group.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "configuration": {
                      "updated": "2014-07-31T15:19:50",
                      "description": "example description",
                      "created": "2014-07-31T15:19:50",
                      "datastore_name": "mysql",
                      "values": {
                          "collation_server": "latin1_swedish_ci",
                          "connect_timeout": 120
                      },
                      "datastore_version_id": "b00000b0-00b0-0b00-00b0-000b000000bb",
                      "instance_count": 0,
                      "id": "005a8bb7-a8df-40ee-b0b7-fc144641abc2",
                      "datastore_version_name": "5.6",
                      "name": "example-configuration-name"
                  }
              }
    patch:
      operationId: updateSomeConfigParmsById
      summary: Update some configuration parameters
      description: |
        Updates some of the configuration parameters associated with the specified configuration group.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples: {}
    put:
      operationId: replaceAllConfigParmsById
      summary: Replace all configuration parameters
      description: |
        Replaces all of the configuration parameters associated with the specified configuration group.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples: {}
    delete:
      operationId: deleteConfigGroup
      summary: Delete configuration group
      description: |
        Deletes the specified configuration group. No message body is expected in the request.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples: {}
  "/{version}/{accountId}/configurations/{configId}/instances":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: configId
      required: true
      in: path
      type: string
      description: |
        The configuration ID for the specified configuration group.
    get:
      operationId: getInstancesForConfiguration
      summary: List instances for configuration
      description: |
        Lists instances that are associated with the specified configuration group.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "instances": [
                      {
                          "id": "d4603f69-ec7e-4e9b-803f-600b9205576f",
                          "name": "json_rack_instance"
                      }
                  ]
              }
  "/{version}/{accountId}/datastores":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    get:
      operationId: getDatastoreTypes
      summary: List all datastore types
      description: |
        Lists all datastore types.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "datastores": [
                      {
                          "default_version": "c00000b0-00c0-0c00-00c0-000b000000cc",
                          "versions": [
                              {
                                  "id": "b00000b0-00b0-0b00-00b0-000b000000bb",
                                  "links": [
                                      {
                                          "href": "https://api.staging.ord1.clouddb.rackspace.net/v1.0/1234/datastores/versions/b00000b0-00b0-0b00-00b0-000b000000bb",
                                          "rel": "self"
                                      },
                                      {
                                          "href": "https://api.staging.ord1.clouddb.rackspace.net/datastores/versions/b00000b0-00b0-0b00-00b0-000b000000bb",
                                          "rel": "bookmark"
                                      }
                                  ],
                                  "name": "5.1"
                              },
                              {
                                  "id": "c00000b0-00c0-0c00-00c0-000b000000cc",
                                  "links": [
                                      {
                                          "href": "https://api.staging.ord1.clouddb.rackspace.net/v1.0/1234/datastores/versions/c00000b0-00c0-0c00-00c0-000b000000cc",
                                          "rel": "self"
                                      },
                                      {
                                          "href": "https://api.staging.ord1.clouddb.rackspace.net/datastores/versions/c00000b0-00c0-0c00-00c0-000b000000cc",
                                          "rel": "bookmark"
                                      }
                                  ],
                                  "name": "5.6"
                              }
                          ],
                          "id": "10000000-0000-0000-0000-000000000001",
                          "links": [
                              {
                                  "href": "https://api.staging.ord1.clouddb.rackspace.net/v1.0/1234/datastores/10000000-0000-0000-0000-000000000001",
                                  "rel": "self"
                              },
                              {
                                  "href": "https://api.staging.ord1.clouddb.rackspace.net/datastores/10000000-0000-0000-0000-000000000001",
                                  "rel": "bookmark"
                              }
                          ],
                          "name": "mysql"
                      },
                      {
                          "default_version": "e8b1ee46-58c9-459e-bb02-50ddc8844be7",
                          "versions": [
                              {
                                  "id": "e8b1ee46-58c9-459e-bb02-50ddc8844be7",
                                  "links": [
                                      {
                                          "href": "https://api.staging.ord1.clouddb.rackspace.net/v1.0/1234/datastores/versions/e8b1ee46-58c9-459e-bb02-50ddc8844be7",
                                          "rel": "self"
                                      },
                                      {
                                          "href": "https://api.staging.ord1.clouddb.rackspace.net/datastores/versions/e8b1ee46-58c9-459e-bb02-50ddc8844be7",
                                          "rel": "bookmark"
                                      }
                                  ],
                                  "name": "5.6"
                              }
                          ],
                          "id": "17e9bb89-0dce-476d-b785-0c8485f932c0",
                          "links": [
                              {
                                  "href": "https://api.staging.ord1.clouddb.rackspace.net/v1.0/1234/datastores/17e9bb89-0dce-476d-b785-0c8485f932c0",
                                  "rel": "self"
                              },
                              {
                                  "href": "https://api.staging.ord1.clouddb.rackspace.net/datastores/17e9bb89-0dce-476d-b785-0c8485f932c0",
                                  "rel": "bookmark"
                              }
                          ],
                          "name": "percona"
                      },
                      {
                          "default_version": "bf414e62-0e66-4e0f-9b76-05d7408eb140",
                          "versions": [
                              {
                                  "id": "53e8fe38-c18d-47d8-9d9e-2ba09a57ae6c",
                                  "links": [
                                      {
                                          "href": "https://api.staging.ord1.clouddb.rackspace.net/v1.0/1234/datastores/versions/53e8fe38-c18d-47d8-9d9e-2ba09a57ae6c",
                                          "rel": "self"
                                      },
                                      {
                                          "href": "https://api.staging.ord1.clouddb.rackspace.net/datastores/versions/53e8fe38-c18d-47d8-9d9e-2ba09a57ae6c",
                                          "rel": "bookmark"
                                      }
                                  ],
                                  "name": "10.0"
                              },
                              {
                                  "id": "bf414e62-0e66-4e0f-9b76-05d7408eb140",
                                  "links": [
                                      {
                                          "href": "https://api.staging.ord1.clouddb.rackspace.net/v1.0/1234/datastores/versions/bf414e62-0e66-4e0f-9b76-05d7408eb140",
                                          "rel": "self"
                                      },
                                      {
                                          "href": "https://api.staging.ord1.clouddb.rackspace.net/datastores/versions/bf414e62-0e66-4e0f-9b76-05d7408eb140",
                                          "rel": "bookmark"
                                      }
                                  ],
                                  "name": "10"
                              }
                          ],
                          "id": "a87786d5-879d-4680-a98c-684122bd7cce",
                          "links": [
                              {
                                  "href": "https://api.staging.ord1.clouddb.rackspace.net/v1.0/1234/datastores/a87786d5-879d-4680-a98c-684122bd7cce",
                                  "rel": "self"
                              },
                              {
                                  "href": "https://api.staging.ord1.clouddb.rackspace.net/datastores/a87786d5-879d-4680-a98c-684122bd7cce",
                                  "rel": "bookmark"
                              }
                          ],
                          "name": "mariadb"
                      }
                  ]
              }
  "/{version}/{accountId}/datastores/versions/{versionId}/parameters":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: versionId
      required: true
      in: path
      type: string
      description: |
        The version for the specified datastore.
    get:
      operationId: getConfigurationParametersWithoutDatastore
      summary: List configuration parameters without datastore
      description: |
        Lists the configuration parameters that may be configured on the system without specifying a datastore.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "configuration-parameters": [
                      {
                          "max": 1,
                          "restart_required": true,
                          "type": "integer",
                          "name": "innodb_file_per_table",
                          "min": 0
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "autocommit",
                          "min": 0
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "local_infile",
                          "min": 0
                      },
                      {
                          "max": 4294967296,
                          "restart_required": false,
                          "type": "integer",
                          "name": "key_buffer_size",
                          "min": 0
                      },
                      {
                          "max": 65535,
                          "restart_required": false,
                          "type": "integer",
                          "name": "connect_timeout",
                          "min": 1
                      },
                      {
                          "max": 4294967296,
                          "restart_required": false,
                          "type": "integer",
                          "name": "join_buffer_size",
                          "min": 0
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "sort_buffer_size",
                          "min": 32768
                      },
                      {
                          "max": 68719476736,
                          "restart_required": true,
                          "type": "integer",
                          "name": "innodb_buffer_pool_size",
                          "min": 0
                      },
                      {
                          "max": 2,
                          "restart_required": false,
                          "type": "integer",
                          "name": "innodb_flush_log_at_trx_commit",
                          "min": 0
                      },
                      {
                          "max": 4294967296,
                          "restart_required": true,
                          "type": "integer",
                          "name": "innodb_log_buffer_size",
                          "min": 1048576
                      },
                      {
                          "max": 4294967296,
                          "restart_required": true,
                          "type": "integer",
                          "name": "innodb_open_files",
                          "min": 10
                      },
                      {
                          "max": 1000,
                          "restart_required": false,
                          "type": "integer",
                          "name": "innodb_thread_concurrency",
                          "min": 0
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "sync_binlog",
                          "min": 0
                      },
                      {
                          "max": 65535,
                          "restart_required": false,
                          "type": "integer",
                          "name": "auto_increment_increment",
                          "min": 1
                      },
                      {
                          "max": 65535,
                          "restart_required": false,
                          "type": "integer",
                          "name": "auto_increment_offset",
                          "min": 1
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "bulk_insert_buffer_size",
                          "min": 0
                      },
                      {
                          "max": 65535,
                          "restart_required": false,
                          "type": "integer",
                          "name": "expire_logs_days",
                          "min": 1
                      },
                      {
                          "max": 65535,
                          "restart_required": false,
                          "type": "integer",
                          "name": "interactive_timeout",
                          "min": 1
                      },
                      {
                          "max": 1073741824,
                          "restart_required": false,
                          "type": "integer",
                          "name": "max_allowed_packet",
                          "min": 1024
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "max_connect_errors",
                          "min": 1
                      },
                      {
                          "max": 65535,
                          "restart_required": false,
                          "type": "integer",
                          "name": "max_connections",
                          "min": 1
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "myisam_sort_buffer_size",
                          "min": 4
                      },
                      {
                          "max": 100000,
                          "restart_required": false,
                          "type": "integer",
                          "name": "max_user_connections",
                          "min": 1
                      },
                      {
                          "max": 100000,
                          "restart_required": true,
                          "type": "integer",
                          "name": "server_id",
                          "min": 1
                      },
                      {
                          "max": 31536000,
                          "restart_required": false,
                          "type": "integer",
                          "name": "wait_timeout",
                          "min": 1
                      },
                      {
                          "type": "string",
                          "name": "character_set_client",
                          "restart_required": false
                      },
                      {
                          "type": "string",
                          "name": "character_set_connection",
                          "restart_required": false
                      },
                      {
                          "type": "string",
                          "name": "character_set_database",
                          "restart_required": false
                      },
                      {
                          "type": "string",
                          "name": "character_set_filesystem",
                          "restart_required": false
                      },
                      {
                          "type": "string",
                          "name": "character_set_results",
                          "restart_required": false
                      },
                      {
                          "type": "string",
                          "name": "character_set_server",
                          "restart_required": false
                      },
                      {
                          "type": "string",
                          "name": "collation_connection",
                          "restart_required": false
                      },
                      {
                          "type": "string",
                          "name": "collation_database",
                          "restart_required": false
                      },
                      {
                          "type": "string",
                          "name": "collation_server",
                          "restart_required": false
                      }
                  ]
              }
  "/{version}/{accountId}/datastores/versions/{versionId}/parameters/{parameterId}":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: versionId
      required: true
      in: path
      type: string
      description: |
        The version for the specified datastore.
    - name: parameterId
      required: true
      in: path
      type: string
      description: |
        The parameter that may be configured for the specified datastore and version.
    get:
      operationId: getConfigurationParameterDetailsWithoutDatastore
      summary: List configuration parameter details without datastore
      description: |
        Lists the details of a specified configuration parameter that may be configured on the system without specifying a datastore.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "max": 1,
                  "restart_required": true,
                  "type": "integer",
                  "name": "innodb_file_per_table",
                  "min": 0
              }
  "/{version}/{accountId}/datastores/{datastoreId}":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: datastoreId
      required: true
      in: path
      type: string
      description: |
        The ID for the specified datastore.
    get:
      operationId: getDatastoreTypesById
      summary: List datastore type
      description: |
        Lists datastore type.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "datastore": {
                      "default_version": "7104c15f-ace0-479b-97ad-b368de32cb68",
                      "versions": [
                          {
                              "id": "b00000b0-00b0-0b00-00b0-000b000000bb",
                              "links": [
                                  {
                                      "href": "https://api.staging.ord1.clouddb.rackspace.net/v1.0/1234/datastores/versions/b00000b0-00b0-0b00-00b0-000b000000bb",
                                      "rel": "self"
                                  },
                                  {
                                      "href": "https://api.staging.ord1.clouddb.rackspace.net/datastores/versions/b00000b0-00b0-0b00-00b0-000b000000bb",
                                      "rel": "bookmark"
                                  }
                              ],
                              "name": "5.1"
                          },
                          {
                              "id": "c00000b0-00c0-0c00-00c0-000b000000cc",
                              "links": [
                                  {
                                      "href": "https://api.staging.ord1.clouddb.rackspace.net/v1.0/1234/datastores/versions/c00000b0-00c0-0c00-00c0-000b000000cc",
                                      "rel": "self"
                                  },
                                  {
                                      "href": "https://api.staging.ord1.clouddb.rackspace.net/datastores/versions/c00000b0-00c0-0c00-00c0-000b000000cc",
                                      "rel": "bookmark"
                                  }
                              ],
                              "name": "5.6"
                          }
                      ],
                      "id": "a00000a0-00a0-0a00-00a0-000a000000aa",
                      "links": [
                          {
                              "href": "https://api.staging.ord1.clouddb.rackspace.net/v1.0/1234/datastores/a00000a0-00a0-0a00-00a0-000a000000aa",
                              "rel": "self"
                          },
                          {
                              "href": "https://api.staging.ord1.clouddb.rackspace.net/datastores/a00000a0-00a0-0a00-00a0-000a000000aa",
                              "rel": "bookmark"
                          }
                      ],
                      "name": "mysql"
                  }
              }
  "/{version}/{accountId}/datastores/{datastoreId}/versions":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: datastoreId
      required: true
      in: path
      type: string
      description: |
        The ID for the specified datastore.
    get:
      operationId: getDatastoreVersionsById
      summary: List datastore versions for datastore
      description: |
        Lists all datastore versions for the specified datastore.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "versions": [
                      {
                          "datastore": "a00000a0-00a0-0a00-00a0-000a000000aa",
                          "id": "b00000b0-00b0-0b00-00b0-000b000000bb",
                          "links": [
                              {
                                  "href": "https://api.staging.ord1.clouddb.rackspace.net/v1.0/1234/datastores/versions/b00000b0-00b0-0b00-00b0-000b000000bb",
                                  "rel": "self"
                              },
                              {
                                  "href": "https://api.staging.ord1.clouddb.rackspace.net/datastores/versions/b00000b0-00b0-0b00-00b0-000b000000bb",
                                  "rel": "bookmark"
                              }
                          ],
                          "name": "5.1"
                      },
                      {
                          "datastore": "a00000a0-00a0-0a00-00a0-000a000000aa",
                          "id": "c00000b0-00c0-0c00-00c0-000b000000cc",
                          "links": [
                              {
                                  "href": "https://api.staging.ord1.clouddb.rackspace.net/v1.0/1234/datastores/versions/c00000b0-00c0-0c00-00c0-000b000000cc",
                                  "rel": "self"
                              },
                              {
                                  "href": "https://api.staging.ord1.clouddb.rackspace.net/datastores/versions/c00000b0-00c0-0c00-00c0-000b000000cc",
                                  "rel": "bookmark"
                              }
                          ],
                          "name": "5.6"
                      }
                  ]
              }
  "/{version}/{accountId}/datastores/{datastoreId}/versions/{versionId}":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: datastoreId
      required: true
      in: path
      type: string
      description: |
        The ID for the specified datastore.
    - name: versionId
      required: true
      in: path
      type: string
      description: |
        The version for the specified datastore.
    get:
      operationId: getDatastoreVersionByVersionId
      summary: List datastore version
      description: |
        Lists datastore version.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples: {}
  "/{version}/{accountId}/datastores/{datastoreId}/versions/{versionId}/parameters":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: datastoreId
      required: true
      in: path
      type: string
      description: |
        The ID for the specified datastore.
    - name: versionId
      required: true
      in: path
      type: string
      description: |
        The version for the specified datastore.
    get:
      operationId: getConfigurationParameters
      summary: List configuration parameters
      description: |
        Lists configuration parameters that may be configured on the system.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "configuration-parameters": [
                      {
                          "max": 1,
                          "restart_required": true,
                          "type": "integer",
                          "name": "innodb_file_per_table",
                          "min": 0
                      },
                      {
                          "max": 4294967296,
                          "restart_required": false,
                          "type": "integer",
                          "name": "key_buffer_size",
                          "min": 0
                      },
                      {
                          "max": 65535,
                          "restart_required": false,
                          "type": "integer",
                          "name": "connect_timeout",
                          "min": 2
                      },
                      {
                          "max": 4294967296,
                          "restart_required": false,
                          "type": "integer",
                          "name": "join_buffer_size",
                          "min": 0
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "sort_buffer_size",
                          "min": 32768
                      },
                      {
                          "max": 68719476736,
                          "restart_required": true,
                          "type": "integer",
                          "name": "innodb_buffer_pool_size",
                          "min": 0
                      },
                      {
                          "max": 2,
                          "restart_required": false,
                          "type": "integer",
                          "name": "innodb_flush_log_at_trx_commit",
                          "min": 0
                      },
                      {
                          "max": 4294967296,
                          "restart_required": true,
                          "type": "integer",
                          "name": "innodb_log_buffer_size",
                          "min": 1048576
                      },
                      {
                          "max": 4294967296,
                          "restart_required": true,
                          "type": "integer",
                          "name": "innodb_open_files",
                          "min": 10
                      },
                      {
                          "max": 1000,
                          "restart_required": false,
                          "type": "integer",
                          "name": "innodb_thread_concurrency",
                          "min": 0
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "sync_binlog",
                          "min": 0
                      },
                      {
                          "max": 65535,
                          "restart_required": false,
                          "type": "integer",
                          "name": "auto_increment_increment",
                          "min": 1
                      },
                      {
                          "max": 65535,
                          "restart_required": false,
                          "type": "integer",
                          "name": "auto_increment_offset",
                          "min": 1
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "bulk_insert_buffer_size",
                          "min": 0
                      },
                      {
                          "max": 65535,
                          "restart_required": false,
                          "type": "integer",
                          "name": "expire_logs_days",
                          "min": 1
                      },
                      {
                          "max": 65535,
                          "restart_required": false,
                          "type": "integer",
                          "name": "interactive_timeout",
                          "min": 1
                      },
                      {
                          "max": 1073741824,
                          "restart_required": false,
                          "type": "integer",
                          "name": "max_allowed_packet",
                          "min": 1024
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "max_connect_errors",
                          "min": 1
                      },
                      {
                          "max": 65535,
                          "restart_required": false,
                          "type": "integer",
                          "name": "max_connections",
                          "min": 1
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "myisam_sort_buffer_size",
                          "min": 4
                      },
                      {
                          "max": 100000,
                          "restart_required": false,
                          "type": "integer",
                          "name": "max_user_connections",
                          "min": 1
                      },
                      {
                          "max": 100000,
                          "restart_required": true,
                          "type": "integer",
                          "name": "server_id",
                          "min": 1
                      },
                      {
                          "max": 31536000,
                          "restart_required": false,
                          "type": "integer",
                          "name": "wait_timeout",
                          "min": 1
                      },
                      {
                          "type": "string",
                          "name": "character_set_filesystem",
                          "restart_required": false
                      },
                      {
                          "type": "string",
                          "name": "character_set_server",
                          "restart_required": false
                      },
                      {
                          "type": "string",
                          "name": "collation_server",
                          "restart_required": false
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": true,
                          "type": "integer",
                          "name": "ft_max_word_len",
                          "min": 10
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": true,
                          "type": "integer",
                          "name": "ft_min_word_len",
                          "min": 1
                      },
                      {
                          "max": 16384,
                          "restart_required": false,
                          "type": "integer",
                          "name": "thread_cache_size",
                          "min": 0
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "query_cache_size",
                          "min": 0
                      },
                      {
                          "max": 2,
                          "restart_required": false,
                          "type": "integer",
                          "name": "query_cache_type",
                          "min": 0
                      },
                      {
                          "max": 524288,
                          "restart_required": false,
                          "type": "integer",
                          "name": "table_definition_cache",
                          "min": 256
                      },
                      {
                          "max": 65535,
                          "restart_required": true,
                          "type": "integer",
                          "name": "open-files-limit",
                          "min": 0
                      },
                      {
                          "max": 524288,
                          "restart_required": false,
                          "type": "integer",
                          "name": "table_open_cache",
                          "min": 1
                      },
                      {
                          "type": "string",
                          "name": "default_time_zone",
                          "restart_required": true
                      },
                      {
                          "max": 2,
                          "restart_required": false,
                          "type": "integer",
                          "name": "completion_type",
                          "min": 0
                      },
                      {
                          "max": 2,
                          "restart_required": false,
                          "type": "integer",
                          "name": "concurrent_insert",
                          "min": 0
                      },
                      {
                          "type": "string",
                          "name": "default-storage-engine",
                          "restart_required": false
                      },
                      {
                          "max": 7,
                          "restart_required": false,
                          "type": "integer",
                          "name": "default_week_format",
                          "min": 0
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "delay_key_write",
                          "min": 0
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "delayed_insert_limit",
                          "min": 1
                      },
                      {
                          "max": 31536000,
                          "restart_required": false,
                          "type": "integer",
                          "name": "delayed_insert_timeout",
                          "min": 1
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "delayed_queue_size",
                          "min": 1
                      },
                      {
                          "max": 30,
                          "restart_required": false,
                          "type": "integer",
                          "name": "div_precision_increment",
                          "min": 0
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "event_scheduler",
                          "min": 0
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "flush",
                          "min": 0
                      },
                      {
                          "max": 31536000,
                          "restart_required": false,
                          "type": "integer",
                          "name": "flush_time",
                          "min": 0
                      },
                      {
                          "type": "string",
                          "name": "ft_boolean_syntax",
                          "restart_required": false
                      },
                      {
                          "max": 1000,
                          "restart_required": true,
                          "type": "integer",
                          "name": "ft_query_expansion_limit",
                          "min": 0
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "general_log",
                          "min": 0
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "group_concat_max_len",
                          "min": 4
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "key_cache_age_threshold",
                          "min": 100
                      },
                      {
                          "max": 100,
                          "restart_required": false,
                          "type": "integer",
                          "name": "key_cache_division_limit",
                          "min": 1
                      },
                      {
                          "type": "string",
                          "name": "log_output",
                          "restart_required": false
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "log_queries_not_using_indexes",
                          "min": 0
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "log_slow_admin_statements",
                          "min": 0
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "log_slow_queries",
                          "min": 0
                      },
                      {
                          "max": 31536000,
                          "restart_required": false,
                          "type": "integer",
                          "name": "long_query_time",
                          "min": 0
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "low_priority_updates",
                          "min": 0
                      },
                      {
                          "max": 2,
                          "restart_required": true,
                          "type": "integer",
                          "name": "lower_case_table_names",
                          "min": 0
                      },
                      {
                          "max": 16384,
                          "restart_required": false,
                          "type": "integer",
                          "name": "max_delayed_threads",
                          "min": 0
                      },
                      {
                          "max": 65535,
                          "restart_required": false,
                          "type": "integer",
                          "name": "max_error_count",
                          "min": 0
                      },
                      {
                          "max": 1844674407370954752,
                          "restart_required": false,
                          "type": "integer",
                          "name": "max_heap_table_size",
                          "min": 16384
                      },
                      {
                          "max": 4294967295,
                          "restart_required": false,
                          "type": "integer",
                          "name": "max_join_size",
                          "min": 1
                      },
                      {
                          "max": 8388608,
                          "restart_required": false,
                          "type": "integer",
                          "name": "max_length_for_sort_data",
                          "min": 4
                      },
                      {
                          "max": 1048576,
                          "restart_required": false,
                          "type": "integer",
                          "name": "max_prepared_stmt_count",
                          "min": 0
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "max_seeks_for_key",
                          "min": 1
                      },
                      {
                          "max": 8388608,
                          "restart_required": false,
                          "type": "integer",
                          "name": "max_sort_length",
                          "min": 4
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "max_write_lock_count",
                          "min": 1
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "min_examined_rows_limit",
                          "min": 0
                      },
                      {
                          "max": 9223372036854775807,
                          "restart_required": false,
                          "type": "integer",
                          "name": "myisam_max_sort_file_size",
                          "min": 0
                      },
                      {
                          "type": "string",
                          "name": "myisam_stats_method",
                          "restart_required": false
                      },
                      {
                          "max": 31536000,
                          "restart_required": false,
                          "type": "integer",
                          "name": "net_read_timeout",
                          "min": 1
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "net_retry_count",
                          "min": 1
                      },
                      {
                          "max": 31536000,
                          "restart_required": false,
                          "type": "integer",
                          "name": "net_write_timeout",
                          "min": 1
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "old_alter_table",
                          "min": 0
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "old_style_user_limits",
                          "min": 0
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "old_passwords",
                          "min": 0
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "optimizer_prune_level",
                          "min": 0
                      },
                      {
                          "max": 62,
                          "restart_required": false,
                          "type": "integer",
                          "name": "optimizer_search_depth",
                          "min": 0
                      },
                      {
                          "max": 1073741824,
                          "restart_required": false,
                          "type": "integer",
                          "name": "preload_buffer_size",
                          "min": 1024
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "query_cache_limit",
                          "min": 0
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "query_cache_wlock_invalidate",
                          "min": 0
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "query_prealloc_size",
                          "min": 8192
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "range_alloc_block_size",
                          "min": 4096
                      },
                      {
                          "max": 2147479552,
                          "restart_required": false,
                          "type": "integer",
                          "name": "read_buffer_size",
                          "min": 8200
                      },
                      {
                          "max": 2147483647,
                          "restart_required": false,
                          "type": "integer",
                          "name": "read_rnd_buffer_size",
                          "min": 8200
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "secure_auth",
                          "min": 0
                      },
                      {
                          "max": 31536000,
                          "restart_required": false,
                          "type": "integer",
                          "name": "slow_launch_time",
                          "min": 0
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "slow_query_log",
                          "min": 0
                      },
                      {
                          "type": "string",
                          "name": "sql_mode",
                          "restart_required": false
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "sync_frm",
                          "min": 0
                      },
                      {
                          "max": 18446744073709547520,
                          "restart_required": false,
                          "type": "integer",
                          "name": "thread_stack",
                          "min": 131072
                      },
                      {
                          "max": 18446744073709551615,
                          "restart_required": false,
                          "type": "integer",
                          "name": "tmp_table_size",
                          "min": 1024
                      },
                      {
                          "type": "string",
                          "name": "transaction-isolation",
                          "restart_required": true
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "updatable_views_with_limit",
                          "min": 0
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "innodb_adaptive_hash_index",
                          "min": 0
                      },
                      {
                          "max": 2,
                          "restart_required": true,
                          "type": "integer",
                          "name": "innodb_autoinc_lock_mode",
                          "min": 0
                      },
                      {
                          "max": 1000,
                          "restart_required": false,
                          "type": "integer",
                          "name": "innodb_commit_concurrency",
                          "min": 0
                      },
                      {
                          "max": 4294967295,
                          "restart_required": false,
                          "type": "integer",
                          "name": "innodb_concurrency_tickets",
                          "min": 1
                      },
                      {
                          "type": "string",
                          "name": "innodb_file_format",
                          "restart_required": false
                      },
                      {
                          "max": 1073741824,
                          "restart_required": true,
                          "type": "integer",
                          "name": "innodb_lock_wait_timeout",
                          "min": 1
                      },
                      {
                          "max": 1,
                          "restart_required": true,
                          "type": "integer",
                          "name": "innodb_locks_unsafe_for_binlog",
                          "min": 0
                      },
                      {
                          "max": 100,
                          "restart_required": false,
                          "type": "integer",
                          "name": "innodb_max_dirty_pages_pct",
                          "min": 0
                      },
                      {
                          "max": 4294967295,
                          "restart_required": false,
                          "type": "integer",
                          "name": "innodb_max_purge_lag",
                          "min": 0
                      },
                      {
                          "max": 95,
                          "restart_required": false,
                          "type": "integer",
                          "name": "innodb_old_blocks_pct",
                          "min": 5
                      },
                      {
                          "max": 4294967295,
                          "restart_required": false,
                          "type": "integer",
                          "name": "innodb_old_blocks_time",
                          "min": 0
                      },
                      {
                          "max": 1,
                          "restart_required": true,
                          "type": "integer",
                          "name": "innodb_rollback_on_timeout",
                          "min": 0
                      },
                      {
                          "type": "string",
                          "name": "innodb_stats_method",
                          "restart_required": false
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "innodb_stats_on_metadata",
                          "min": 0
                      },
                      {
                          "max": 18446744073709551615,
                          "restart_required": false,
                          "type": "integer",
                          "name": "innodb_stats_sample_pages",
                          "min": 1
                      },
                      {
                          "max": 1,
                          "restart_required": false,
                          "type": "integer",
                          "name": "innodb_strict_mode",
                          "min": 0
                      },
                      {
                          "max": 4294967295,
                          "restart_required": false,
                          "type": "integer",
                          "name": "innodb_sync_spin_loops",
                          "min": 0
                      },
                      {
                          "max": 18446744073709551615,
                          "restart_required": false,
                          "type": "integer",
                          "name": "innodb_thread_sleep_delay",
                          "min": 1
                      }
                  ]
              }
  "/{version}/{accountId}/datastores/{datastoreId}/versions/{versionId}/parameters/{parameterId}":
    parameters:
    - name: accountId
      required: true
      in: path
      type: string
      description: |
        The account ID of the owner of the specified instance.
    - name: datastoreId
      required: true
      in: path
      type: string
      description: |
        The ID for the specified datastore.
    - name: versionId
      required: true
      in: path
      type: string
      description: |
        The version for the specified datastore.
    - name: parameterId
      required: true
      in: path
      type: string
      description: |
        The parameter that may be configured for the specified datastore and version.
    get:
      operationId: getConfigurationParameterDetails
      summary: List configuration parameter details
      description: |
        Lists the details of a specified configuration parameter that may be configured on the system.
      produces:
      - application/json
      responses:
        '200':
          description: 200 response
          examples:
            application/json: |-
              {
                  "max": 1,
                  "restart_required": true,
                  "type": "integer",
                  "name": "innodb_file_per_table",
                  "min": 0
              }
